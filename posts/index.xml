<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on XuShun's Blog</title><link>https://xushun1221.github.io/posts/</link><description>Recent content in Posts on XuShun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 21 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://xushun1221.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>【算法】链表</title><link>https://xushun1221.github.io/2022/%E7%AE%97%E6%B3%95%E9%93%BE%E8%A1%A8/</link><pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/%E7%AE%97%E6%B3%95%E9%93%BE%E8%A1%A8/</guid><description>链表定义 1 2 3 4 5 6 7 8 9 10 11 12 // 单链表 struct ListNode { int val; ListNode *next; }; // 双链表 struct ListNode { int val; ListNode *next; ListNode *front; }; 链表题目之方法论 笔试：不用太在乎空间复杂度，一切为了时间</description></item><item><title>CS144 Lab Assignment lab-4</title><link>https://xushun1221.github.io/2022/cs144-lab-assignment-lab-4/</link><pubDate>Sun, 20 Mar 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/cs144-lab-assignment-lab-4/</guid><description>前言 前后经过半个多月终于把关于TCP的几个lab写完了，★,°:.☆(￣▽￣)/$:.°★ 。 lab4的难点在于对于TCP各个状态的理解、如何</description></item><item><title>CS144 Lab Assignment lab-3</title><link>https://xushun1221.github.io/2022/cs144-lab-assignment-lab-3/</link><pubDate>Thu, 17 Mar 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/cs144-lab-assignment-lab-3/</guid><description>the TCP sender 本次实验是TCP的sender，需要完成的主要功能有： 跟踪接收方的接收窗口，正确处理接收方返回的确认号ackno和窗口大小window</description></item><item><title>CS144 Lab Assignment lab-2</title><link>https://xushun1221.github.io/2022/cs144-lab-assignment-lab-2/</link><pubDate>Sun, 13 Mar 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/cs144-lab-assignment-lab-2/</guid><description>build 首先把origin/lab2-startercode合并到本地仓库，cmake构建时，有可能会报错： CMake Error: The following variables are used in this project, but they are set to NOTFOUND. 这是因</description></item><item><title>CS144 Lab Assignment lab-1</title><link>https://xushun1221.github.io/2022/cs144-lab-assignment-lab-1/</link><pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/cs144-lab-assignment-lab-1/</guid><description>stitching substrings into a byte stream 本次实验是要实现一个流重组器，能够将TCPReceiver接收到的乱序的、重复的TCP段重新组装成一个正确的、按序的、无重复的字</description></item><item><title>CS144 Lab Assignment lab-0</title><link>https://xushun1221.github.io/2022/cs144-lab-assignment-lab-0/</link><pubDate>Sun, 27 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/cs144-lab-assignment-lab-0/</guid><description>前言 最近重新学习了一下计算机网络的知识，想着搞点东西做一做，然后就看到了这个Stanford的CS144网络课，它有一系列的网络实验，主要是</description></item><item><title>【算法】桶排序</title><link>https://xushun1221.github.io/2022/%E7%AE%97%E6%B3%95%E6%A1%B6%E6%8E%92%E5%BA%8F/</link><pubDate>Tue, 22 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/%E7%AE%97%E6%B3%95%E6%A1%B6%E6%8E%92%E5%BA%8F/</guid><description>桶排序 使用桶排序思想的算法主要有计数排序和基数排序两种。桶排序思想的排序都是不基于比较的排序方法。时间复杂度为$O\left(n\right</description></item><item><title>Ubuntu&amp;Windows下终端挂代理方法（QV2ray）</title><link>https://xushun1221.github.io/2022/ubuntuwindows%E4%B8%8B%E7%BB%88%E7%AB%AF%E6%8C%82%E4%BB%A3%E7%90%86%E6%96%B9%E6%B3%95qv2ray/</link><pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/ubuntuwindows%E4%B8%8B%E7%BB%88%E7%AB%AF%E6%8C%82%E4%BB%A3%E7%90%86%E6%96%B9%E6%B3%95qv2ray/</guid><description>问题 费力巴拉的在Ubuntu上装好了QV2ray（通过snap安装），发现shell还是不能用git clone，研究了一下，明白了。 方法 打开</description></item><item><title>Ubuntu虚拟机无法和win10互相复制粘贴记拖拽</title><link>https://xushun1221.github.io/2022/ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%97%A0%E6%B3%95%E5%92%8Cwin10%E4%BA%92%E7%9B%B8%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E8%AE%B0%E6%8B%96%E6%8B%BD/</link><pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%97%A0%E6%B3%95%E5%92%8Cwin10%E4%BA%92%E7%9B%B8%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E8%AE%B0%E6%8B%96%E6%8B%BD/</guid><description>问题 Ubuntu虚拟机无法和win10系统互相复制粘贴以及拖拽文件。安装vmware-tools无用。 解决方法 不要安装vmware-tool</description></item><item><title>【算法】堆排序</title><link>https://xushun1221.github.io/2022/%E7%AE%97%E6%B3%95%E5%A0%86%E6%8E%92%E5%BA%8F/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/%E7%AE%97%E6%B3%95%E5%A0%86%E6%8E%92%E5%BA%8F/</guid><description>堆排序 原理：利用大根堆（小根堆）结构来进行排序。 实现1 这种实现方法，在建立最大堆时，从后向前对每个有孩子的结点进行了一次向下调整算法，建堆时</description></item><item><title>【算法】快速排序</title><link>https://xushun1221.github.io/2022/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</link><pubDate>Thu, 17 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/%E7%AE%97%E6%B3%95%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F/</guid><description>问题1：partition1.0 问题描述：给定一个数组和一个数x，将数组中小于x的数放在数组左边，大于等于x的数放在数组右边，要求空间复杂度</description></item><item><title>Coding之小技巧</title><link>https://xushun1221.github.io/2022/coding%E4%B9%8B%E5%B0%8F%E6%8A%80%E5%B7%A7/</link><pubDate>Wed, 16 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/coding%E4%B9%8B%E5%B0%8F%E6%8A%80%E5%B7%A7/</guid><description>前言 记录一些Coding的技巧。 取数组下标中点 22.2.16 常规的取下标中点方法：mid = (left + right) / 2，这种方法在数组很大的时候，可能会溢出，所以用这种方</description></item><item><title>Ubuntu下切换gccg++版本</title><link>https://xushun1221.github.io/2022/ubuntu%E4%B8%8B%E5%88%87%E6%8D%A2gccg-%E7%89%88%E6%9C%AC/</link><pubDate>Wed, 16 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/ubuntu%E4%B8%8B%E5%88%87%E6%8D%A2gccg-%E7%89%88%E6%9C%AC/</guid><description>前言 我的Ubuntu18.04安装的build-essential默认的gcc/g++版本为7.5，现在需要8版本的，切换版本的操作如下。 操</description></item><item><title>【算法】归并排序</title><link>https://xushun1221.github.io/2022/%E7%AE%97%E6%B3%95%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</link><pubDate>Wed, 16 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/%E7%AE%97%E6%B3%95%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</guid><description>归并排序 直接代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 void merge(vector&amp;lt;int&amp;gt;&amp;amp; nums, int left, int mid, int right) { if (left == right) return; vector&amp;lt;int&amp;gt; temp(right - left + 1); int l = left, r = mid + 1, i = 0; while (l &amp;lt;= mid</description></item><item><title>Linux下使用VSCode和CMake进行C++开发【5】</title><link>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%915/</link><pubDate>Tue, 15 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%915/</guid><description>前言 学了这么多，写一个简单的项目来总结一下。 写源码 源码 编译 编译 调试 点击Run and Debug按钮，新建launch.json文件，然后按F5即可</description></item><item><title>Linux下使用VSCode和CMake进行C++开发【3】</title><link>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%913/</link><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%913/</guid><description>安装VSCode 直接官网下载最新版本的deb包，地址：https://code.visualstudio.com； 在下载deb包的目录下打开</description></item><item><title>Linux下使用VSCode和CMake进行C++开发【4】</title><link>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%914/</link><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%914/</guid><description>CMake是啥 一个跨平台的安装编译工具，可以使用简单的语句来描述所有平台的编译安装过程； 是大部分C++开源项目的标配； CMake语法特性 基本</description></item><item><title>Linux下使用VSCode和CMake进行C++开发【2】</title><link>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%912/</link><pubDate>Sun, 13 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%912/</guid><description>GDB调试器介绍 GDB是什么 GDB(GNU Debugger)是一个用来调试C/C++程序的功能强大的调试器，是Linux系统开发C/C++最常用的调试器</description></item><item><title>Linux下使用VSCode和CMake进行C++开发【1】</title><link>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%911/</link><pubDate>Sat, 12 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%911/</guid><description>安装Linux系统 这里用的是虚拟机 Ubuntu 18.04 LTS 安装过程略。 安装GCC、GDB、CMake 安装GCC，GDB 1 2 3 sudo apt update sudo apt install build-essential gdb 安装CMake 1 sudo</description></item><item><title>【算法】二分查找</title><link>https://xushun1221.github.io/2022/%E7%AE%97%E6%B3%95%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</link><pubDate>Wed, 09 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/%E7%AE%97%E6%B3%95%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</guid><description>前言 二分查找算法，思想比较简单，但是实现上有许多细节需要考虑，尤其是在边界条件的判断上，很容易出错。最近看了一个关于二分查找的总结，用另一种</description></item><item><title>【算法】C++对数器</title><link>https://xushun1221.github.io/2022/%E7%AE%97%E6%B3%95c-%E5%AF%B9%E6%95%B0%E5%99%A8/</link><pubDate>Mon, 07 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/%E7%AE%97%E6%B3%95c-%E5%AF%B9%E6%95%B0%E5%99%A8/</guid><description>对数器是什么 对数器是用来测试算法正确性的一种方式，在找不到合适的在线OJ时，我们也可以编写一个对数器来测试自己编写的算法的正确性。原理是用一</description></item><item><title>image test</title><link>https://xushun1221.github.io/2022/image-test/</link><pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/image-test/</guid><description>image test 图片</description></item><item><title>【算法】位运算之异或运算</title><link>https://xushun1221.github.io/2022/%E7%AE%97%E6%B3%95%E4%BD%8D%E8%BF%90%E7%AE%97%E4%B9%8B%E5%BC%82%E6%88%96%E8%BF%90%E7%AE%97/</link><pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/%E7%AE%97%E6%B3%95%E4%BD%8D%E8%BF%90%E7%AE%97%E4%B9%8B%E5%BC%82%E6%88%96%E8%BF%90%E7%AE%97/</guid><description>什么是异或 逻辑运算符异或（exclusive or），XOR或EOR（编程语言中多用^），对两个运算元的一种逻辑析取类型，异或算符的值为真当且</description></item><item><title>blog post test</title><link>https://xushun1221.github.io/2022/blog-post-test/</link><pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/blog-post-test/</guid><description/></item><item><title>Markdown基本语法</title><link>https://xushun1221.github.io/2022/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</link><pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</guid><description>1. 标题 在单词短句之前添加井号#来创建标题，井号的数量代表标题的级别，一到六个#代表一级到六级标题。 注意，最好在#后标题内容之前加上一个空格。</description></item></channel></rss>