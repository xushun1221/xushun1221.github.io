<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on XuShun's Blog</title><link>https://xushun1221.github.io/tags/linux/</link><description>Recent content in Linux on XuShun's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 04 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://xushun1221.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>【Linux系统编程】11 - 守护进程、线程</title><link>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B11-%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B/</link><pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B11-%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B/</guid><description>进程组和会话 进程组 - 概念和特性 进程组，也称之为作业。BSD 于 1980 年前后向 Unix 中增加的一个新特性。代表一个或多个进程的集合。每个进程都属于一个进程</description></item><item><title>【VSCode】用户代码片段 - 自动生成代码框架</title><link>https://xushun1221.github.io/2022/vscode%E7%94%A8%E6%88%B7%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5-%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E6%A1%86%E6%9E%B6/</link><pubDate>Sat, 04 Jun 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/vscode%E7%94%A8%E6%88%B7%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5-%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E6%A1%86%E6%9E%B6/</guid><description>前言 最近写了好多C程序，每次新建一个C文件都要写头文件和main函数，有点烦，想着VSCode能不能自动填写这些东西，还真可以，好耶。 使用 User</description></item><item><title>【Linux系统编程】10 - 信号</title><link>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B10-%E4%BF%A1%E5%8F%B7/</link><pubDate>Sun, 29 May 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B10-%E4%BF%A1%E5%8F%B7/</guid><description>信号的概念 信号在我们的生活中随处可见，如：古代战争中摔杯为号；现代战争中的信号弹；体育比赛中使用的信号枪…… 他们都有共性： 简单； 不能携带大量</description></item><item><title>【Linux系统编程】09 - 进程间通信</title><link>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B09-%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/</link><pubDate>Thu, 26 May 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B09-%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1/</guid><description>IPC - Inter Process Communication Linux环境下，进程地址空间相互独立，每个进程各自有不同的用户地址空间。任何一个进程的全局变量在另一个进程中都看不到，所以进程和</description></item><item><title>【Linux系统编程】08 - 进程</title><link>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B08-%E8%BF%9B%E7%A8%8B/</link><pubDate>Sat, 21 May 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B08-%E8%BF%9B%E7%A8%8B/</guid><description>进程相关概念 程序和进程 程序：非活动的，只占用磁盘空间； 进程：运行起来的程序，占用内存、CPU等系统资源。 并发 在操作系统中，一个时间段中有多个</description></item><item><title>【Linux系统编程】07 - 文件系统编程</title><link>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B07-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/</link><pubDate>Wed, 18 May 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B07-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/</guid><description>Inode和dentry Inode的本质是一个结构体，存储文件的属性信息。如：权限、类型、大小、时间、用户、盘块位置等等。也叫作文件属性管理</description></item><item><title>【Linux系统编程】06 - 文件IO</title><link>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B06-%E6%96%87%E4%BB%B6io/</link><pubDate>Sat, 14 May 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B06-%E6%96%87%E4%BB%B6io/</guid><description>系统调用和系统函数 系统调用，是由操作系统实现并提供给外部应用程序的编程接口，是应用程序同操作系统之间数据交互的桥梁。 系统函数又是什么？例如，</description></item><item><title>【Linux系统编程】04 - gdb调试器的使用</title><link>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B04-gdb%E8%B0%83%E8%AF%95%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B04-gdb%E8%B0%83%E8%AF%95%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>参考这里一起看gdb介绍 gdb使用前提 使用gdb调试器进行调试的前提条件，是对文件进行编译时添加-g选项，为可执行文件添加调试信息，这样会使</description></item><item><title>【Linux系统编程】05 - Makefile的使用</title><link>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B05-makefile%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B05-makefile%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>Makefile基础 Makefile是用来管理项目的脚本。 Makefile的命名只有两种方式：makefile，Makefile。 Makef</description></item><item><title>【Linux系统编程】03 - gcc编译器 静态库和动态库</title><link>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B03-gcc%E7%BC%96%E8%AF%91%E5%99%A8-%E9%9D%99%E6%80%81%E5%BA%93%E5%92%8C%E5%8A%A8%E6%80%81%E5%BA%93/</link><pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B03-gcc%E7%BC%96%E8%AF%91%E5%99%A8-%E9%9D%99%E6%80%81%E5%BA%93%E5%92%8C%E5%8A%A8%E6%80%81%E5%BA%93/</guid><description>gcc编译器可以参考gcc编译器 gdb调试器可以参考gdb调试器 gcc编译的四步骤 源文件（hello.c）编译为可执行文件（a.out）步骤</description></item><item><title>【Linux系统编程】02 - vim的使用</title><link>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B02-vim%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B02-vim%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>vim的三种模式 vim有三种模式： 命令模式 文本模式 末行模式 三种模式的切换： vi filename，使用vim打开文件，文件不存在会创建。此时会进</description></item><item><title>【Linux系统编程】01 - Linux系统知识和基础操作</title><link>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B01-linux%E7%B3%BB%E7%BB%9F%E7%9F%A5%E8%AF%86%E5%92%8C%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</link><pubDate>Tue, 10 May 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B01-linux%E7%B3%BB%E7%BB%9F%E7%9F%A5%E8%AF%86%E5%92%8C%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</guid><description>终端 一切输入输出设备的总称，键盘、鼠标、显示器&amp;hellip; Linux系统中的终端Terminal，是虚拟终端。 shell 在终端中输入命令会被执行</description></item><item><title>Ubuntu&amp;Windows下终端挂代理方法（QV2ray）</title><link>https://xushun1221.github.io/2022/ubuntuwindows%E4%B8%8B%E7%BB%88%E7%AB%AF%E6%8C%82%E4%BB%A3%E7%90%86%E6%96%B9%E6%B3%95qv2ray/</link><pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/ubuntuwindows%E4%B8%8B%E7%BB%88%E7%AB%AF%E6%8C%82%E4%BB%A3%E7%90%86%E6%96%B9%E6%B3%95qv2ray/</guid><description>问题 费力巴拉的在Ubuntu上装好了QV2ray（通过snap安装），发现shell还是不能用git clone，研究了一下，明白了。 Ubun</description></item><item><title>Ubuntu虚拟机无法和win10互相复制粘贴及拖拽</title><link>https://xushun1221.github.io/2022/ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%97%A0%E6%B3%95%E5%92%8Cwin10%E4%BA%92%E7%9B%B8%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E5%8F%8A%E6%8B%96%E6%8B%BD/</link><pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%97%A0%E6%B3%95%E5%92%8Cwin10%E4%BA%92%E7%9B%B8%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4%E5%8F%8A%E6%8B%96%E6%8B%BD/</guid><description>问题 Ubuntu虚拟机无法和win10系统互相复制粘贴以及拖拽文件。安装vmware-tools无用。 解决方法 不要安装vmware-tool</description></item><item><title>Ubuntu下切换gccg++版本</title><link>https://xushun1221.github.io/2022/ubuntu%E4%B8%8B%E5%88%87%E6%8D%A2gccg-%E7%89%88%E6%9C%AC/</link><pubDate>Wed, 16 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/ubuntu%E4%B8%8B%E5%88%87%E6%8D%A2gccg-%E7%89%88%E6%9C%AC/</guid><description>前言 我的Ubuntu18.04安装的build-essential默认的gcc/g++版本为7.5，现在需要8版本的，切换版本的操作如下。 操</description></item><item><title>Linux下使用VSCode和CMake进行C++开发【5】</title><link>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%915/</link><pubDate>Tue, 15 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%915/</guid><description>前言 学了这么多，写一个简单的项目来总结一下。 写源码 源码 编译 编译 调试 点击Run and Debug按钮，新建launch.json文件，然后按F5即可</description></item><item><title>Linux下使用VSCode和CMake进行C++开发【3】</title><link>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%913/</link><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%913/</guid><description>安装VSCode 直接官网下载最新版本的deb包，地址：https://code.visualstudio.com； 在下载deb包的目录下打开</description></item><item><title>Linux下使用VSCode和CMake进行C++开发【4】</title><link>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%914/</link><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%914/</guid><description>CMake是啥 一个跨平台的安装编译工具，可以使用简单的语句来描述所有平台的编译安装过程； 是大部分C++开源项目的标配； CMake语法特性 基本</description></item><item><title>Linux下使用VSCode和CMake进行C++开发【2】</title><link>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%912/</link><pubDate>Sun, 13 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%912/</guid><description>GDB调试器介绍 GDB是什么 GDB(GNU Debugger)是一个用来调试C/C++程序的功能强大的调试器，是Linux系统开发C/C++最常用的调试器</description></item><item><title>Linux下使用VSCode和CMake进行C++开发【1】</title><link>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%911/</link><pubDate>Sat, 12 Feb 2022 00:00:00 +0000</pubDate><guid>https://xushun1221.github.io/2022/linux%E4%B8%8B%E4%BD%BF%E7%94%A8vscode%E5%92%8Ccmake%E8%BF%9B%E8%A1%8Cc-%E5%BC%80%E5%8F%911/</guid><description>安装Linux系统 这里用的是虚拟机 Ubuntu 18.04 LTS 安装过程略。 安装GCC、GDB、CMake 安装GCC，GDB 1 2 3 sudo apt update sudo apt install build-essential gdb 安装CMake 1 sudo</description></item></channel></rss>